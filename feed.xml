<rss version="2.0"><channel><title>Olaven's blog</title><link>https://olaven.org</link><description>General thoughts about software. And other stuff.</description><item><title>theme of 2020</title><link>https://olaven.org/out/reflections/theme_of_2020.html</link><guid>https://olaven.org/out/reflections/theme_of_2020.html</guid><description><h1 id="theme-of-2020---theme-of-creation">Theme of 2020 - Theme of creation.</h1>
<p>I want to create a theme for myself. Some do this for a year. I am not sure if a year is the correct amount of time. 
Years are so engrained in everything, and they are everywhere. I think coupling a theme with a year would create 
unnecessary levels of stress when the year is coming to a close. 
And stress is not something that I want. </p>
<p>The idea of themes come - as far as I’m concerned - from CGP Grey and Myke Hurley on the the <a href="https://www.relay.fm/cortex">Cortex podcast</a>. 
Although comparable to a new years resolution, a theme is more broad. Myke described it as “a north star” while Grey thought 
of it as a “<a href="https://en.wikipedia.org/wiki/Daemon_(computing)">Daemon</a> process for the brain” (both paraphrased from memory). </p>
<p>In addition to being more broad, there is no fail state. Themes may change or turn out to be wrong. 
That’s not failure. On the contrary, it’s an achievement. It is recognising one was mistaken, and 
attempting to make adjustments in time. </p>
<p>I believe this comes from their less concrete and broad nature. New years resolutions are paths that must
be followed. Themes are just lighting up the different paths ahead of you. </p>
<p>So - creation. What do I mean by that? I am not sure, but I am writing to find out. 
What follows is a description of my starting point. </p>
<h2 id="context">Context</h2>
<p>I am coming close to finishing my bachelors degree, and I do not yet have any concrete plans for what to do next. 
The past two and a half years I have been very focused on studies. That was a deliberate decision, and I am happy it was made. 
The past two and a half years have been the best of my youth/adult life. </p>
<p>What made them great? I never quite came to terms with high school. I started to study right after leaving the place.
A major quality of life improvement after the change was that i finally had gained control of my own time. 
I still had (have) to attend some lectures during the week, but just the fact that no one makes me go there 
(i.e. there is no punishment for not going) makes <em>all</em> the difference. In addition, lectures only make up ~8 hours 
every week, meaning that a large majority of the time is spent exactly as I see fit. This allows customisation of my 
work environment on a level that I have previously only been able to dream of. </p>
<p>I have also tried myself down the path of consulting and self employment; a bumpy, but enjoyable ride that I think has a 
lot of potential, given attention and a thoughtful approach. </p>
<p>During this time, I have had relatively clear goals in mind. Wether it was getting a job, getting good grades, 
getting experience being self employed or getting the bachelors degree. </p>
<p>With one exception, these goals have been reached. I still have half a year to - hopefully - get the degree. 
I am relieved that things have mostly gone my way. I have to find new goals. Goals keep me going and give me some 
sense of purpose. But that presupposes that the goals are good. Good goals brings purpose, bad ones do not. </p>
<h2 id="creation">Creation</h2>
<p>I have been told that I seem most happy when I have projects that I am working on, and when I am creating things. 
This is a false perception, though not strictly untrue. I would not say that I become happy. Rather, I become engaged. 
Engagement is keeping me away from <a href="https://en.wikipedia.org/wiki/Apathy">apathy</a>, which in turn would make me unhappy. </p>
<p>My largest problem going forward is figuring out what to do after getting my bachelors degree. That struggle is not 
what this write-up is about. However, the theme is probably going to affect the way I view my options going forward 
and therefore relevant. I want to be self-driven, and I want to create something that I believe has inherent value. </p>
<p>In fact, I have some unexplainable urge to do something and express myself. Some people describe some irrational 
need to express themselves. I’m not sure it is irrational. It is more appropriate to call it moment-driven. And I want more of it. This is a real aspect of me, but it is sometimes neglected. 
The other part of me wants to make the “correct” and “reasonable” choices. The safe choice, that will guarantee a stable future. 
These two parts are in conflict with each other. I need them not to be. </p>
<p>These parts have strengths and weaknesses. The rational “play safe”-part of me should be allowed to dominate sometimes. 
During the time leading up to an exam or making me go through slides before the lecture. </p>
<p>The latter part has a tendency to dominate, and that has often been a huge benefit. But the moment-driven part of me 
is responsible for some decisions that I am very happy with. For example, studying Computer Science at a private university 
college known for being alternative and “creative”. This went agains almost all the advice I received, urging me towards a 
public, safe university. However, I am almost certain that I made the correct choice. Trusting some gut feeling has worked 
for me at times when the path has not been clear.</p>
<p>When goals are clear (e.g. before an upcoming exam), I <em>should</em> make reasonable and safe decisions. But without the clear 
goal, “want to” may be wiser than “should”. The difficulty lies in figuring out when to follow what side. As I am starting 
to lack concrete goals, I believe that I am at a similar point now. I should repeat the success I achieved when choosing between schools. </p>
<p>The difficult part about moment-driven side is that is is very unpredictable. It surfaces from time to time, and usually 
gives good insight. It may in fact give new goals. This is the reason I want to chase it in the upcoming season. </p>
<p>But how am I to chase it? How can it be provoked? I have to deviate slightly from the safe paths, and allow myself to 
focus on following the urges more than I have been doing in the past. And I think this can be done through creation. 
“Creation” is a broad term. 
Specifically, I am referring to the act of making things that feel meaningful to me at the time of creation, without 
necessarily thinking in the long term. </p>
<p>The bachelor project I will be working on is a large project, but it is just <em>one</em> project. My guess is that this will 
allow me to focus on more things as well, regardless of the bachelor projects size. Hopefully, I will have more space in my brain. </p>
<p>Exploration through creation is the key of the theme, in search of new goals. </p>
<h2 id="concretely">Concretely</h2>
<p>Themes are meant to guide, not dictate. My plan going forward is to create what I want when I want to. 
And seek opportunities for creation. </p>
<ul>
<li>Whims should be embraced before being criticised. </li>
<li>Exploration should be encouraged, also when doing school work. </li>
<li>Follow the moment-driven urges to create when it surfaces. </li>
<li>Creations should be valued, regardless of career and academic value </li>
</ul>
<p>Reaching new goals is the purpose, and this is an attempt at an approach.   </p>
</description></item><item><title>advent of the threadmill</title><link>https://olaven.org/out/reflections/advent_of_the_threadmill.html</link><guid>https://olaven.org/out/reflections/advent_of_the_threadmill.html</guid><description><h1 id="advent-of-the-treadmill">Advent of the Treadmill</h1>
<p>or Trying to Run and Making Mistakes </p>
<ul>
<li><a href="#advent-of-the-treadmill">Advent of the Treadmill</a><ul>
<li><a href="#thoughts-before">Thoughts before</a></li>
<li><a href="#daily-log">Daily log</a><ul>
<li><a href="#day-one">Day one</a></li>
<li><a href="#day-two">Day two</a></li>
<li><a href="#day-three">Day three</a></li>
<li><a href="#day-four">Day four</a></li>
<li><a href="#day-five">Day five</a></li>
<li><a href="#day-six">Day six</a></li>
<li><a href="#day-seven">Day seven</a></li>
<li><a href="#day-eight">Day eight</a></li>
<li><a href="#day-nine">Day nine</a></li>
<li><a href="#day-ten">Day ten</a></li>
<li><a href="#day-eleven">Day eleven</a></li>
<li><a href="#day-twelve">Day twelve</a></li>
<li><a href="#day-thirteen">Day thirteen</a></li>
<li><a href="#day-fourteen">Day fourteen</a></li>
<li><a href="#day-fifteen">Day fifteen</a></li>
<li><a href="#day-sixteen">Day sixteen</a></li>
<li><a href="#day-seventeen">Day seventeen</a></li>
<li><a href="#day-eighteen">Day eighteen</a></li>
</ul>
</li>
<li><a href="#thoughts-after">Thoughts after</a></li>
</ul>
</li>
</ul>
<h2 id="thoughts-before">Thoughts before</h2>
<p>I&#39;ve been getting increasingly into riding my bike over 
the past year. From not being a very active person at 
all I&#39;m now able to cover some moderate distances on my 
bike relatively fast. Fun! </p>
<p>It&#39;s getting cold and dark. It&#39;s way below 0 degrees outside
and it will remain so for the next months. 
It also gets dark long before 
I am done with work. Cycling around town and exploring 
is fun. However I&#39;ve found it hard to 
be motivated for regular exercise sessions on my bike. </p>
<p>I need to try something different to stay active. 
Earlier this week I impulsively signed up for a gym 
membership for the month of December. </p>
<p>I intend to give jogging on treadmills a serious go
and to create a log of my experience here. 
Treadmills are tedious and the other people at the 
gym make me a bit nervous. So why do this? </p>
<p>First of all, getting out of my comfort zone is 
only good for me. Second of all, it&#39;s a project
and I enjoy having projects :) </p>
<h2 id="daily-log">Daily log</h2>
<h3 id="day-one">Day one</h3>
<p>I was starting to get bored. Can&#39;t let that happen!
So I impulsively signed up for a gym and thought I&#39;d 
try jogging. </p>
<p>Arrived at 19:00. The gym was larger than I expected.
Many people and loud music. On the second floor I 
found a room with no music and mostly treadmills.
Should work. </p>
<p>Turned on a podcast and did on-and-off jogging for 
45-60 minutes. I&#39;m feeling surprisingly OK, if a 
little bit bored with the static view. </p>
<p>My feet got irritated and red, and quite painful.
They&#39;re obviously not used to running.</p>
<h3 id="day-two">Day two</h3>
<p>Arrived at 21:15, 45 minutes before closing. 
Very few people! That&#39;s great! I could pick
exactly the treadmill I wanted to, in a safe 
corner. </p>
<p>Jogged on-and-off until they closed. 
I felt alright, but I found it a bit harder to 
keep up today compared to yesterday.</p>
<p>Jogging is clearly different from cycling!
It&#39;s much heavier in every way. Thus far 
I&#39;m finding it harder to get into a flow. 
Hopefully this gets easier over time. </p>
<p>Both of my feet developed some serious blisters.
I bought some gel plasters on the way home, 
drained the blisters and applied the plasters 
before going to bed. </p>
<h3 id="day-three">Day three</h3>
<p>Unfortunately one of the blisters got really painful, 
woke me up and kept me awake several times during the 
night. No fun. I (naively?) did not expect that. </p>
<p>I was set on heading to the gym, but my better 
half advised me to take one rest day and recover before 
I make things worse. She was right. </p>
<p>Walking is hard after sitting still and I&#39;m feeling 
very sore. I&#39;m not too worried about that, I think 
my body just has to adjust to this new way of moving. </p>
<h3 id="day-four">Day four</h3>
<p>I went to the gym at 20:00 and spent most 
of the upcoming hour on the treadmill. I 
was able to run for noticeably longer than 
earlier before turning to walking speeds. </p>
<p>My blisters have started to heal, but are 
still very present. They&#39;re not as painful
anymore though. The soreness I felt afterwards 
moved more to the sides of my legs compared 
to earlier days. </p>
<p>Later in the evening my nose started 
bleeding. This is fairly common for me, so
I&#39;m not sure if it&#39;s connected to the running 
or not.</p>
<p>Interestingly this was the first night
where running on the treadmill no longer felt 
completely novel. Rather, it is approaching 
a feeling I would associate with the norm. 
Quicker than I expected! </p>
<h3 id="day-five">Day five</h3>
<p>I&#39;m finally starting to get somewhere close 
to achieving &quot;the zone&quot; I can get into when
riding my bike. I&#39;m still far away, but noticeably 
less so. </p>
<p>I arrived at 19:00 and did 2x10 minutes of 
jogging and then 2x5 minutes, all with relatively 
fast walking in between. This is roughly what 
I have been doing the other days as well, but 
it&#39;s starting to feel more solid and it comes 
a bit easier. </p>
<p>My foot started to hit the ground a bit differently 
today. I&#39;m wondering if this is an automated 
response to the blisters. Those haven&#39;t quite 
healed yet. The soreness is no longer painful
in the same way as before. Just present. It&#39;s 
also moved further to the sides of my legs. </p>
<h3 id="day-six">Day six</h3>
<p>After arriving around 15:00, I noticed 
instant pain in my foot when I started to 
run. Walking had been strange all day, but 
somehow I thought it would disappear when I 
started to run. </p>
<p>Because of this I sat on an exercise 
bikes instead. This was still good exercise and 
my foot didn&#39;t hurt at all. Great! 
Riding on a still-standing bike was boring. 
I missed the road. Following the <a href="https://en.wikipedia.org/wiki/World_Chess_Championship_2021">World 
Chess Championship</a>
helped a bunch :) </p>
<h3 id="day-seven">Day seven</h3>
<p>In order to make some pre-arranged plans I arrived 
much earlier than I usually do. And my foot was 
fine again! No pain. So I went back to running :) </p>
<p>This day went similar to <a href="#day-five">day five</a>. That&#39;s 
good! Day seven also feels a bit like a milestone. 
I&#39;m not celebrating anything until the end though.  </p>
<h3 id="day-eight">Day eight</h3>
<p>Arrived around 20:00 in the evening. 
I&#39;d had too much to eat for dinner and clearly 
payed for that when running. </p>
<p>I had slightly longer breaks of walking than 
I usually do and ran for 2x10 minutes and 1x5, which 
is 5 minutes less than the other days. 
I&#39;m not feeling too bad about it, but I 
can return stronger next time!</p>
<h3 id="day-nine">Day nine</h3>
<p>This evening was spent working on my bike.
That is fixing it, not riding. Being a hopeless amateur
bike mechanic is fun sometimes, but usually 
takes a lot of time. </p>
<p>I also ate a lot of liquorice and drank a liter 
of chocolate milk while making dinner. 
I probably shouldn&#39;t mention this since I&#39;m 
sort of documenting exercise, but it feels
a bit disingenuous to leave it out. </p>
<h3 id="day-ten">Day ten</h3>
<p>I arrived at 18:00 today. 
I did 3x10 minutes. That has become 
the &quot;mark of success&quot; at this point, so 
I am happy :)  </p>
<p>I took off the plasters earlier because 
everything looked and felt fine again. 
Unfortunately one of the blisters flared 
up again today, and I applied new ones 
as a result. </p>
<p>Things felt tough when I was running, but 
when I look back at it, I feel like the time 
passed relatively quickly!</p>
<h3 id="day-eleven">Day eleven</h3>
<p>Another day of 3x10 minutes! 
Running felt easier today, and 
time flew by with some fun podcasts. </p>
<h3 id="day-twelve">Day twelve</h3>
<p>I had plans today and I did not 
have time to run after work. The plans 
involved playing padel, so at least 
some activity was involved :) </p>
<h3 id="day-thirteen">Day thirteen</h3>
<p>Played padel today as well, but since 
this was a saturday I had time to run 
as well :-) I did 20 minutes of continuos 
running and then ten more after a break! 
That is the longest yet and it feels like a 
step up from the usual 3x10.</p>
<p>There were few people at the gym; I 
had the place almost to myself. I addition, 
getting to and from the padel court
involved some uphill cycling on 
snowy roads. What a day!</p>
<h3 id="day-fourteen">Day fourteen</h3>
<p>Another day of 3x10 minutes. This was fun.
Running starts to feel very normal. I actually 
like it, more than I expected to at the very least. </p>
<p>This time I was listening ot music instead of 
podcasts. This was an interesting change. I thought 
it would bore me, but my head had enough going on 
on its own. Coming to think of it, that is why I 
listen to podcasts in the first place; it makes my 
brain shut up, at least partially. </p>
<h3 id="day-fifteen">Day fifteen</h3>
<p>My legs are hurting a lot. And for some reason they 
are painfully stinging when I try to get up from a 
squatting position or otherwise putting a lot of 
weight on my right knee. Not good. My foot also 
feels like it is lightly sprained. </p>
<p>I think a rest day is much needed. Luckily I am practically
drowning in work to keep me occupied today. </p>
<h3 id="day-sixteen">Day sixteen</h3>
<p>I am afraid that the pain is similar to yesterday. I will
continue staying away from running. I am still cycling to work though. 
Cycling does not seem to trigger the pain. Furhthermore, it is not long 
to the office. I do not thing it will have a negative impact on my 
recovery. </p>
<p>I have started doing stretching exercises. I now realize that I should 
have done this from the beginning. Obvious in hindsight. Oh well, 
at least I am learning. </p>
<p>Hopefully this will get better soon.</p>
<h3 id="day-seventeen">Day seventeen</h3>
<p>The pain is slowly but surely getting better :) 
I am still doing stretching exercises during the day 
and staying away from running. </p>
<p>In addition to not stretching properly, I now see 
that I have not been good enough at starting slowly 
and getting properly warmed up. I have usually done 
around 2-5 minutes of walking before attempting to run. 
In hindsight that does not seem like enough. Another 
learning point I guess. </p>
<p>I will keep at this resting and healing for as long 
as needed. I feel a bit sheepish for putting myself 
in this position. Again: learning the hard way :) </p>
<h3 id="day-eighteen">Day eighteen</h3>
<p>My knee is getting better and so is my foot. 
There is still some pain, but nothing compared to just 
two days ago. That is great! </p>
<p>I am a bit sorry this whole running thing did not go as expected. 
I really learned a lot in a short amount of time, however! 
The importance of stretching and starting slow, for 
one thing. I also learned that running is very hard on 
the body; I have not had anything close to these kinds of 
issues when cycling. </p>
<p>I played padel again today and really enjoyed it. 
My legs and general soreness is holding me back a 
bit, but not enough to remove the fun from it. </p>
<h2 id="thoughts-after">Thoughts after</h2>
<p>This has been some interesting weeks. For one thing, 
I discovered that running can be alright. I also learned 
a lot about some of the mistakes one can make when 
starting out. All things I kind of thought I knew. And 
all things I was warned about by people close to me. 
This shows that I can be a bit stubborn and sometimes 
need to learn something for myself to actually understand 
and take i seriously. Although often advantageous, this 
mindset definitely has some drawbacks as well :) </p>
<p>I am happy that I exposed myself to something new, made 
some mistakes and learned from it :) </p>
</description></item><item><title>Lessons from building Krets</title><link>https://olaven.org/out/reflections/Lessons_from_building_Krets.html</link><guid>https://olaven.org/out/reflections/Lessons_from_building_Krets.html</guid><description><h1 id="lessons-from-building-krets">Lessons from building Krets</h1>
<h2 id="trying-to-create-a-profitable-project-alone">Trying to create a profitable project alone</h2>
<p>I&#39;ve spent most of my time between summer and christmas 2020 working on <a href="https://krets.app">Krets</a>. The project was 
my first real attempt at creating a commercially viable service on my own. While the project isn&#39;t dead, I&#39;ve now started focusing on other projects for a while. </p>
<p>This post covers some of the things I I&#39;ve learned while working on Krets. </p>
<h2 id="dont-make-me-think-or-frankly-do-anything">Don&#39;t make me think! (or, frankly, do anything)</h2>
<p>Most people, i.e. potential customers, really don&#39;t like having to figure out how to use your software.
I thought knew this after reading <a href="https://en.wikipedia.org/wiki/Don%27t_Make_Me_Think">Steve Krugh&#39;s <em>Don&#39;t make me think</em></a> years ago. 
I didn&#39;t. </p>
<p>Krets was primarily targeted at businesses, meaning that I&#39;ve been talking a lot to owners of small businesses. 
They have a lot on their mind already. Everything not core to their business is a distraction unless 
the rewards for them materialize themselves quickly. This means: minimal setup and minimal distruption 
to their existing flow is essential. </p>
<p>I&#39;ve experienced potential customers don&#39;t even want to spend the time to create an account, but would 
rather have me do it. These were otherwise excited customers who showed initiative. 
This happened on several occations. </p>
<p>So the lesson is: People are not going to spend time on you or your project. 
Even if they see value in what you&#39;re offering, they don&#39;t care until the value is actually there. 
They don&#39;t find the project in itself interesting, like you do. </p>
<p>This was (still is, if I&#39;m being honest) hard to internalize because I am 
the oposite. I am curious to learn about software and play around with every user-setting I can find. 
I guess that&#39;s why I ended up writing software.</p>
<p>Also, if something else has to be handled (like idk, <a href="https://en.wikipedia.org/wiki/COVID-19_pandemic">a pandemic</a>) 
you&#39;re the first thing going off their todo-list. Understandably so :)</p>
<h2 id="time-is-worth-a-lot-of-money">Time is worth a lot of money</h2>
<p>When I started this project, I found myself with relatively little money, 
but a lot of time. Krets required a lot of skills I did not have, nor had 
the money to buy from someone else. Like marketing-, sales- and design skills. </p>
<p>I thought this was OK. Money and time are just two sides of the same coin. 
Since I had a lot of it, I could just throw time at the problem, instead of money. 
While I still believe this to be mostly true, I drastically underestimated how much 
time is required for... everything. Ironic really, since that&#39;s the one thing 
everyone tells everyone about every project ever. </p>
<p>I did everything: marketing, cold-calling potential customers, organize meetings and try to get funding, 
as well as actually implementing the product. </p>
<p>I&#39;m very happy to have this experience of being responsible for- and doing everything.
It just did not pay off for the project this time :-) </p>
<h2 id="having-friends-is-a-must">Having friends is a must</h2>
<p>I have been working on Krets alone. However, I&#39;ve been lucky to have a couple friends 
around. Dedicating time to talking about your thoughts with someone is key. 
Having someone to talk to about what&#39;s on your mind is very helpful for separating
out the constructive and good thoughs from the messy inners of your brain. </p>
<p>These sessions can be scheduled, informal lunches or a meeting with a specific topic. 
Try to make it a regular thing. The times I did this were way easier to deal with 
than the times where I didn&#39;t. </p>
<h2 id="thank-you-for-reading-this">Thank you for reading this</h2>
<p>I hope these thoughts can be of help for someone else. <br/>
Regardless, thank you for taking the time to read. <br/>
Blogging is a strange beast that I&#39;m still trying to figure out. <br/></p>
<ul>
<li>feel free to <a href="mailto:olav@sundfoer.com">send me an email</a></li>
<li>or checkout my other <a href="https://github.com/olaven">work on Github</a> </li>
<li>if it&#39;s your thing, subscribe to <a href="https://olaven.org/feed.xml">RSS Feed</a></li>
</ul>
</description></item><item><title>how  this site works</title><link>https://olaven.org/out/about_this_site/how _this_site_works.html</link><guid>https://olaven.org/out/about_this_site/how _this_site_works.html</guid><description><h1 id="blogging-with-markblog">Blogging with <a href="www.github.com/olaven/markblog">Markblog</a></h1>
<p>Or rather: how I got rid of bloated setup and just wrote markdown. </p>
<p>When I first built this site almost a year ago, <a href="olaven.org/out/site.html">I was pretty 
happy</a> with my setup. It was built with 
<a href="https://nextjs.org/">NextJS</a>, hosted with <a href="https://zeit.co/home">Zeit now</a> and 
the pages were written in <a href="https://mdxjs.com/">MDX</a> and styled with <a href="https://sass-lang.com/">Sass</a>.
A pretty huge pipeline is needed in order to get this to stick together. </p>
<p>However, the site itself was literally just as basic as the site you are looking 
at right now (as of march, 2020). Why is such a complicated setup needed? Of 
course, it is not. But I knew NextJS pretty well, had gotten familiar with Sass and 
I really wanted to write using <a href="https://daringfireball.net/projects/markdown/">Markdown</a>. 
What I wanted was achieved: a homepage I could update by writing markdown. However, I 
could not quite get past the fact that there was so much setup needed for such a basic thing.</p>
<p>Markblog is my attempt at a solution. It is a small piece of software written in <a href="deno.land">Deno</a>. 
It simply converts markdown to HTML, and packages it in a nice, tiny, non-bloated blog-like page. 
As of writing, the default file structure is as follows:  </p>
<ul>
<li><code>index.md</code></li>
<li><code>style.css</code></li>
<li><code>posts/</code></li>
</ul>
<p>(create this automatically with Markblog&#39;s <code>init</code>-command)</p>
<p>The index page shows the markdown-text in addition to links to posts, in addition to the content 
written in <code>index.md</code>. Then, Markblog&#39;s <code>build</code>-command triggers conversion to html. In my setup, 
this runs as part of a simple CI-pipeline, meaning that I never touch anything other than Markdown-files. </p>
<p>If this interests you, please head over to <a href="www.github.com/olaven/markblog">the project page</a> 
to see more details!</p>
</description></item><item><title>on original setup</title><link>https://olaven.org/out/about_this_site/on_original_setup.html</link><guid>https://olaven.org/out/about_this_site/on_original_setup.html</guid><description><h1 id="the-site">The site</h1>
<p><em>NOTE</em>: This post is out of date, as the site is <a href="./how_this_site_works.md">updated</a>.
<em>NOTE</em>: This post was renamed from &quot;site&quot; to &quot;initial site&quot;</p>
<p>This is my website. I have iterated on it many times. 
Although I have made many attempts at making it look
good and stylish, I have never gotten to something that 
I like. However, my belief is that I am closer now than 
ever before.</p>
<h2 id="styling">Styling</h2>
<p>My approach is simply to keep it as simple as possible. 
I am certainly not alone in this; a lot of people have 
very simple websites, focusing solely on content. We 
are talking <em>properly simple</em>. No styling or anything.
Just plain HTML-tags with content.</p>
<p>This means that the page fails or succeeds based on the 
cotnent alone. Because - quite frankly - content is all 
that is available. Realising that styling is not what I 
want to spend time doing, I have done something similar. </p>
<p>Even if the content quality to warrant such an approach 
is not there. </p>
<h2 id="general-setup">General setup</h2>
<p>I am currently writing in <a href="https://daringfireball.net/projects/markdown/">Markdown</a>. 
More specifically, I am using <a href="https://github.com/mdx-js/mdx">MDX</a>, 
which seems to combine the pleasentness of Markdowns minimal syntax 
with the usefulness of <a href="reactjs.org">React</a> and its components.</p>
<p>For building site itself, I am using <a href="https://nextjs.org">NextJS</a>. 
The process has been surprisingly straightforward. Writing in
markdown and automatically receving quite nice webpages on the other 
end is a delight. The app is deployed with <a href="zeit.co">now</a>. I had 
some domain-related issues, but that was mainly confusion on my part. </p>
</description></item><item><title>making a browser extension with typescript and react</title><link>https://olaven.org/out/guides/making_a_browser_extension_with_typescript_and_react.html</link><guid>https://olaven.org/out/guides/making_a_browser_extension_with_typescript_and_react.html</guid><description><h1 id="how-im-building-an-extension-with-typescript-and-react">How I&#39;m building an Extension with Typescript and React</h1>
<p>My goal with this guide is to show how I ended up building a chrome extension with <a href="https://www.typescriptlang.org/">Typescript</a> and <a href="https://reactjs.org/">react</a>. It won&#39;t necessarily fit your use case. But I certainly hope you can draw inspiration from it :-) </p>
<p>To follow this post, you should have <a href="https://reactjs.org/docs/getting-started.html">a basic understanding of React</a> as well a little experience with <a href="nodejs.org">NodeJS</a>. </p>
<p>I&#39;ve divided this post into two parts: </p>
<ol>
<li><a href="#going-with-a-comfortable-tech-stack">Why I chose the tech stack that I did</a></li>
<li><a href="#lets-actually-make-something">Showing you how to setup the project</a></li>
</ol>
<h2 id="going-with-a-comfortable-tech-stack">Going with a comfortable tech stack</h2>
<h3 id="i-want-the-type-safety-typescript-can-give-me">I want the type-safety typescript can give me</h3>
<p>My experience is that the benefits of Typescript (or other statically typed languages) outweigh the downsides. 
I especially like how it makes refactoring much easier. 
Typescript screams at you when things are changing. Javascript silently fails. 
The former allows me to constantly search for better ways of expressing the program I&#39;m writing without 
being afraid (too afraid) of breaking something down the line. </p>
<h3 id="react-is-familiar">React is familiar</h3>
<p>Although I prefer to work on backend code, I happen to know React quite well. 
I decided to learn it sometime back in 2017, and stuck with it. When <a href="https://reactjs.org/docs/hooks-intro.html">hooks</a> were released, I transitioned into writing functional react components and I have yet to look back. I have no good explanation for why I like this. This way of writing UI and handling state just happens to work well with the way I think. 
Naturally, React was my first choice for writing a browser extension.</p>
<h3 id="lets-try-to-avoid-bloated-configuration-files">Let&#39;s try to avoid bloated configuration files</h3>
<p>Configuration files very quickly become a mess. I find this to be escpecially true in the JS ecosystem. Before knowing it, you end up with a <code>.babelrc</code>, <code>webpack.config.js</code>, <code>package.json</code>, <code>&lt;INSERT_TEST_FRAMEWORK&gt;.config.ts</code>, <code>.eslintrc</code> and so on. </p>
<p>This quickly becomes hard to maintain. Perhaps it shouldn&#39;t be this way, but I mostly find configuration files to be instances of &quot;I have no idea why this works, let&#39;s not touch it&quot;. 
It&#39;s hard to debug and easy to make mistakes. Bad combination. 
(<a href="https://preview.redd.it/a0hf4zzwv4a11.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0dad1c1d40783ba976a6d39f994fe423eb305dc5">relevant comic</a>) </p>
<p>I landed on <a href="parceljs.org">Parcel</a> which promises to need zero configuration. And I&#39;ve found this to be largely true. This <a href="https://imgs.xkcd.com/comics/will_it_work.png">might bite me some day</a>, but for now I&#39;m happy :-) </p>
<h2 id="lets-actually-make-something">Let&#39;s actually make something!</h2>
<p>Did you just skip to this section? That&#39;s fine. I&#39;d likely have done the same. 
The contents of this section should be enough to create your extension. However, the full source 
code is available <a href="https://github.com/olaven/browser-extension-with-tsx">on Github</a>.  </p>
<h2 id="initialize-and-add-dependencies">Initialize and add dependencies</h2>
<p>We first need to initialize a new project and add the dependencies we need. 
I&#39;ve written a short script with the commands below. 
It boils down to: initialize a project, and add parcel and typescript. </p>
<pre><code class="language-sh">mkdir my_extension_project;
cd my_extension_project; 
yarn init -y; 
yarn add react react-dom 
yarn add --dev typescript parcel @types/react @types/react-dom  @types/chrome;
echo &quot;Extension setup done 🧑‍🚀&quot;;</code></pre>
<p>This script adds <code>&quot;main&quot;: &quot;index.js&quot;</code> to <code>package.json</code>. Remove this manually.</p>
<h2 id="simple-workflow">Simple Workflow</h2>
<p>This is the workflow we&#39;ll end up with: 
We want a <code>yarn dev</code> command, automatically rebuilding our source code when developing. 
We&#39;ll add a <code>yarn build</code>  command as well, for building our extension for distribution :) </p>
<p>With parcel, these are very simple. Just add the following JSON configuration to the <code>package.json</code> we just created.</p>
<pre><code class="language-json">/*..*/
&quot;scripts&quot;: {
    &quot;dev&quot;: &quot;parcel watch src/index.html --public-url=./&quot;,
    &quot;build&quot;: &quot;parcel build src/index.html --public-url=./&quot;
}
/*..*/</code></pre>
<p>You&#39;ll notice that we&#39;re referencing an <code>index.html</code> file in these scripts. 
This will be the entry point of our extension (more on this <a href="#add-your-first-popup">in in a second</a>).</p>
<p>These commands are basically variants on &quot;let parcel look at this file and do all the stuff Babel and Webpack would usually do&quot;.</p>
<h2 id="popups-and-background-scripts">Popups and background scripts</h2>
<p>This is the time to make ourselves familiar with some extension concepts. I&#39;ll keep it short. </p>
<h3 id="popups-are-ui">Popups are UI</h3>
<p>Extension popups define the GUI of our application. That is, 
the visual elements that pop up when you click on the extension. 
If you use a password manager, the popup would be the window where you 
enter your master password and search for the password you want to use. </p>
<h3 id="background-scripts-are-useful-for-interacting-with-the-browser">Background scripts are useful for interacting with the browser</h3>
<p>Background scripts are programs that run independently of the UI or other state in the browser. 
They are useful for handling long term state, e.g. by interacting with the <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage">storage API</a>. They can also be used to run code on events in the browser. Such 
events can be creation of new windows or navigation between tabs. </p>
<h3 id="telling-the-browser-about-our-extension">Telling the browser about our extension</h3>
<p>The details of the extension is defined in a <code>manifest.json</code> file at the root of our project folder. 
<code>manifest.json</code> tells the browser what our extension should have permission to do and where it&#39;s source files are.
You can <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension#manifest.json">check out MDN</a> for further details. </p>
<p>For now, let&#39;s add a <code>manifest.json</code> looking like this: </p>
<pre><code class="language-json">{
  &quot;name&quot;: &quot;My First Extension&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;description&quot;: &quot;My first browser extension!&quot;,
  &quot;manifest_version&quot;: 2
}</code></pre>
<h2 id="install-your-extension-in-chrome-or-firefox">Install your extension in chrome or firefox</h2>
<p>Before we start making stuff, we want to install our extension in the browser. 
This allows us to see what we&#39;re making.</p>
<ul>
<li>If you&#39;re using Firefox<ol>
<li>navigate to <code>about:debugging</code> in your browser</li>
<li>click <em>This Firefox</em></li>
<li>click <em>Load temporary Add-on</em></li>
<li>select the <code>manifest.json</code> file in this folder </li>
</ol>
</li>
<li>If you&#39;re using Chrome<ol>
<li>navigate to <code>chrome://extensions</code></li>
<li>enable developer mode in the upper left corner </li>
<li>click <em>Load Unpacked</em> </li>
<li>select the your project directory</li>
</ol>
</li>
</ul>
<h3 id="add-your-first-popup">Add your first popup</h3>
<p>Most of the following should be familiar if you&#39;ve used React before. If you&#39;re confused, refer to the code comments :-)  </p>
<p>The entry point of our application will be <code>index.html</code> - <a href="https://www.youtube.com/watch?v=x3AYYRqRMC4">classic</a>. 
We&#39;ll add it at <code>src/index.html</code> as this matches with the <a href="#simple-workflow">build script</a> we added in <code>package.json</code> earlier.</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;!-- The root node of our component tree --&gt;
    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;!-- The entry point for our React components --&gt;
&lt;script src=&quot;./components/index.tsx&quot;&gt;&lt;/script&gt;
&lt;/html&gt;</code></pre>
<p>Similarly, let&#39;s add a <code>./src/components/index.tsx</code>. This file will load our react component. </p>
<pre><code class="language-tsx">
import * as React from &quot;react&quot;; 
import * as ReactDOM from &quot;react-dom&quot;; 

//This is our counter component 
const Counter = () =&gt; {
    const [ count, setCount ] = React.useState(0);
    return &lt;&gt;
        &lt;h2&gt;{count}&lt;/h2&gt;
        &lt;button onClick={() =&gt; {setCount(count + 1)}}&gt;increment&lt;/button&gt;
        &lt;button onClick={() =&gt; {setCount(count - 1)}}&gt;decrement&lt;/button&gt;
    &lt;/&gt;
}

/* We&#39;re now telling React to render this component on the webpage, inside 
the first element it can find with and id of &quot;root&quot;. Notice how this matches 
the `div`-tag in our `index.html` :-) */
ReactDOM.render(&lt;Counter /&gt;, document.getElementById(&quot;root&quot;));</code></pre>
<p>Lastly, the browser needs to know about our popup to show it. 
As <a href="#telling-the-browser-about-our-extension">just discussed</a>, this is done through our <code>manifest.json</code> file. 
Simply add the following to it: </p>
<pre><code class="language-json">/*...*/
&quot;browser_action&quot;: {
  &quot;default_popup&quot;: &quot;dist/index.html&quot;
}
/*...*/</code></pre>
<p>Notice how we&#39;re referencing <code>dist/index.html</code> and not <code>src/index.html</code>. This is because 
parcel creates and leaves our files in the <code>dist</code>-directory when it is done transforming our Typescript and React code to 
plain <code>.js</code>-files :-) </p>
<h3 id="did-it-work">Did it work?</h3>
<p>It&#39;s time to see our beautiful creation!
Open a terminal and run <code>yarn dev</code>. You should see a message like <code>✨ Built in 58ms</code>. </p>
<p>Now open your browser, and click on your extension. There it is! Or should be.
If something went wrong, read the error message carefully and try to figure out what&#39;s 
going on. You can always refer to <a href="https://github.com/olaven/browser-extension-with-tsx">the full solution</a> if you&#39;re stuck.</p>
<p>While you&#39;re at it, try to make a change in your component. Notice how the change is picked up in the browser at once. Parcel has rebuilt our source files automatically :-)</p>
<h3 id="adding-a-background-script">Adding a background script</h3>
<p>Now that we have our popup working, lets try to add a background script as well. 
<a href="#background-scripts-are-useful-for-interacting-with-the-browser">As mentioned</a>, these can (amongst other things) be used to listen for browser events. To demonstrate this, we&#39;ll create a script that logs the id of a tab whenever we create one!</p>
<p>First, create the file at <code>src/background/script.ts</code> with the following code: </p>
<pre><code class="language-ts">
//Every time a tab is created...
chrome.tabs.onCreated.addListener((tab) =&gt; {
    //run this code 
    console.log(`You just created a tab with id: ${tab.id}`)
}); </code></pre>
<p>Like with popups, we have to tell the browser about this through <code>manifest.json</code>: </p>
<pre><code class="language-json">/*..*/
&quot;background&quot;: {
  &quot;scripts&quot;: [
    &quot;dist/background/script.js&quot;
  ]
}
/*..*/</code></pre>
<p>Again, we&#39;re referencing the <code>dist</code> folder where Parcel leaves our files. 
You might recall that background scripts <a href="#background-scripts-are-useful-for-interacting-with-the-browser">run separately</a>. 
In other words, our popup knows nothing of this background script. Hence, we have to explicitly tell Parcel to include this file. 
Do this by editing the <code>&quot;dev&quot;</code> and <code>&quot;build&quot;</code> commands in <code>package.json</code> like this: </p>
<pre><code class="language-json">/*..*/
&quot;scripts&quot;: {
    &quot;dev&quot;: &quot;parcel watch src/index.html src/background/script.ts --public-url=./&quot;,
    &quot;build&quot;: &quot;parcel build src/index.html src/background/script.ts --public-url=./&quot;
}
/*..*/</code></pre>
<p>Since we&#39;ve modified our <code>dev</code>-script, we need to stop and restart it in the terminal window.</p>
<p>We&#39;re almost ready to see our background script in action! 
We just need to access the console where the <code>console.log</code>&#39;s are written. </p>
<ul>
<li>If you&#39;re using Firefox<ol>
<li>navigate to &quot;about:config&quot; and add <code>extensions.sdk.console.logLevel</code> with a string value of <code>&quot;all&quot;</code></li>
<li>restart Firefox</li>
<li>Open to Tools -&gt; Web developer -&gt; Browser console (alternatively use cmd+shift+j)</li>
<li>Click the settings icon and enable Show Content Messages</li>
</ol>
</li>
<li>If you&#39;re using Chrome <ul>
<li>navigate to &quot;chrome://extensions&quot;</li>
<li>click on &quot;background page&quot; on your extension (you might need to hit the refresh button for this to show up)  </li>
</ul>
</li>
</ul>
<p>You should now see the console for your background script! Open your browser and console side by side and create a few tabs. 
The handler is running and <code>You just created a tab with id: N</code> gets logged ✨</p>
<h2 id="see-browser-vendors-for-publishing">See browser vendors for publishing</h2>
<p>I&#39;m not going to cover how to publish your extensions here. 
This blog post covers a lot already. Browsers themselves have guides for this.
<a href="https://developer.chrome.com/docs/webstore/publish/">Here&#39;s one the one for Chrome</a> and <a href="https://extensionworkshop.com/documentation/publish/submitting-an-add-on/">here&#39;s the same for Firefox</a>. </p>
<h2 id="closing">Closing</h2>
<p>Thank you for reading. It really means a lot to me.
Hopefully this gave you enough knowledge to start experimenting with extensions for yourself. 
If this helped you out, please consider supporting my work through <a href="https://github.com/sponsors/olaven">Github Sponsors</a>.<br>If you have any questions, feel free to <a href="mailto:olav@sundfoer.com">send me an email</a> :-) </p>
</description></item><item><title>blog with git and markdown</title><link>https://olaven.org/out/guides/blog_with_git_and_markdown.html</link><guid>https://olaven.org/out/guides/blog_with_git_and_markdown.html</guid><description><h1 id="blogging-with-git-and-markdown">Blogging with Git and Markdown</h1>
<p><em>Disclaimer</em>: parts of this guide covers a piece of software called Markblog, of which I am the author.</p>
<h2 id="who-is-this-for">Who is this for?</h2>
<p>This guide assumes that you are: </p>
<ul>
<li>familiar with using the command line</li>
<li>familiar with using <code>git</code></li>
<li>someone with a basic understanding of Markdown</li>
<li>a Github user (👋 or <a href="https://github.com/join">become one</a>)</li>
</ul>
<h2 id="whats-this-guide-about">What&#39;s this guide about?</h2>
<p>This guide will go through an easy way to get setup a blog. Afterwards, you 
will be able to blog with the following workflow: </p>
<ol>
<li>write markdown-files on your computer ✍️</li>
<li>push your prose to github 🐙</li>
<li>have your blog update automatically 😍</li>
</ol>
<h2 id="whats-the-techstack-briefly">What&#39;s the techstack, briefly?</h2>
<p>To build our blog from Markdown, we will use <a href="https://github.com/olaven/markblog">Markblog</a>. 
This is an open source tool written with <a href="deno.land">Deno</a>. </p>
<p>In order to deploy our website, we will use <a href="https://pages.github.com/">Github Pages</a>. Github Pages 
is free and works - unsurprisingly - seamlessly with projects on Github. 
Additionally, <a href="https://github.com/features/actions">Github Actions</a> will be used to automate the 
deployment process. If these tools are unfamiliar, this might seem like a lot. But stick with me, 
it is all relatively simple when it comes together 😅</p>
<h2 id="enough-talk-lets-get-started">Enough talk, let&#39;s get started!</h2>
<h3 id="installation">Installation</h3>
<ol>
<li><a href="https://git-scm.com/">install Git</a></li>
<li><a href="https://deno.land/#install">install Deno</a></li>
<li><a href="https://github.com/olaven/markblog#installation">install Markblog</a></li>
</ol>
<h3 id="git-setup">Git Setup</h3>
<ol>
<li>create a repository on Github (check &quot;Initialize this repository with a README&quot;)</li>
<li>Enable &quot;Github Pages&quot; in the repository settings by setting <code>master</code> as source. </li>
<li>navigate to some fitting folder in your terminal, e.g. <code>cd $HOME/Documents</code></li>
<li>clone your new repo with <code>git clone https://github.com/&lt;your-username&gt;/&lt;your-repository-name&gt;</code></li>
</ol>
<h3 id="blog-setup">Blog Setup</h3>
<ol>
<li>navigate to your cloned repository with <code>cd &lt;your-repository-name&gt;</code></li>
<li>run <code>markblog init</code></li>
<li>(optional) add <code>./style.css</code> to make your page look the way you want</li>
</ol>
<p>Markblog has created two files for you: <code>index.md</code> and <code>./posts</code>. 
Anything you write in <code>index.md</code> will appear on the front-page of your blog. 
<code>./posts</code> is where you will write new posts on your blog. </p>
<h3 id="writing-your-first-post">Writing your first post</h3>
<p>Let&#39;s take a break from the setup, and write something!</p>
<ol>
<li>open the repo-folder in your text editor of choice</li>
<li>in <code>index.md</code>, write a sentence or two about the blog. Or don&#39;t - it&#39;s up to you 🤗</li>
<li>create a new file in <code>./posts</code> called <code>my_first_post.md</code>. </li>
<li>Write something in <code>./posts/my_first_post.md</code>. Or don&#39;t - still up to you 🍨</li>
</ol>
<h3 id="automated-deployment">Automated Deployment</h3>
<p>After this step, we will have achieved the workflow outlined <a href="#whats-this-guide-about">at the beginning</a>!
This section is long and somewhat cumbersome. However, this is automation! In other words,
we only have to do this once!</p>
<ul>
<li>On <a href="https://github.com">Github</a><ol>
<li>Go to your <a href="https://github.com/settings/profile">profile settings</a></li>
<li>Navigate to &quot;Developer settings&quot; -&gt; &quot;Personal access tokens&quot; </li>
<li>click &quot;Generate new access token&quot;. This will prompt for your password.</li>
<li>Make sure to check &quot;repo&quot;-access, write a fitting note and click &quot;Generate token&quot;</li>
<li>Keep the token until step 8. Never share it!</li>
<li>head over to the repository you created</li>
<li>Navigate to &quot;Settings&quot; -&gt; &quot;Secrets&quot; and click &quot;Add a new secret&quot;</li>
<li>Add a secret called <code>ACCESS_TOKEN</code>, with the key from step 4.</li>
</ol>
</li>
<li>Locally, in your cloned repository<ol>
<li>create directory for Github Actions with <code>mkdir -p ./github/workflows</code>. </li>
<li>create a workflow-file for deploy with <code>touch ./github/workflows/deploy.yml</code></li>
<li>paste the following into <code>deploy.yml</code>: </li>
</ol>
</li>
</ul>
<pre><code class="language-yml">name: deploy

on:
    push:
        branches: [writing]
jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@master
          - uses: denolib/setup-deno@master
            with:
              deno-version: 0.36
          - name: Build
            run: deno --allow-read --allow-write https://raw.githubusercontent.com/olaven/markblog/master/markblog.ts build 
          - name: Deploy
            uses: JamesIves/github-pages-deploy-action@releases/v3
            with:
                ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
                BRANCH: master 
                FOLDER: . # The folder the action should deploy.</code></pre>
<h3 id="going-live-🗺-🌩">Going live 🗺 🌩</h3>
<ol>
<li>checkout to the branch for writing, <code>git checkout -b writing</code></li>
<li>commit your changes, <code>git add . &amp;&amp; git commit -m &quot;initial blog setup&quot;</code></li>
<li><code>git push --set-upstream origin writing</code></li>
</ol>
<p>Congratulations 👏 🎊 Within a few minutes, your blog should go live. 
Your next post is just an <code>.md</code>-file away! To publish it, just push it 
onto the <code>writing</code>-branch, and your automation will do the rest 🍇 🍏</p>
<p>(If you are unsure about the URL, have a look at the &quot;Github Pages&quot;-seciton of your Github-repository 😃)</p>
<p>Check out <a href="https://github.com/olaven/markblog#documentation">Markblog&#39;s documentation</a> for more information about how to customize your blog.
See <a href="https://olaven.org">my blog</a>(<a href="https://github.com/olaven/olaven.github.io">github repo</a>) for a live example.</p>
<p>Thanks for reading! </p>
</description></item></channel></rss>